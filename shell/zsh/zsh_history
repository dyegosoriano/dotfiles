: 0000000000:0;kubectl create -f src/filename.yml
: 0000000000:0;kubectl apply -f src/filename.yml

: 0000000000:0;kubectl config get-contexts

: 0000000000:0;kubectl delete all --all -n NAMESPACE
: 0000000000:0;kubectl delete -n NAMESPACE
: 0000000000:0;kubectl delete -f src/filename.yml
: 0000000000:0;kubectl delete -f src -R
: 0000000000:0;kubectl delete deployment --all
: 0000000000:0;kubectl delete service --all
: 0000000000:0;kubectl delete ingress --all
: 0000000000:0;kubectl delete pods --all
: 0000000000:0;kubectl delete pvc --all
: 0000000000:0;kubectl delete pv --all

: 0000000000:0;kubectl get secret SECRET-NAME
: 0000000000:0;kubectl get service
: 0000000000:0;kubectl get ingress
: 0000000000:0;kubectl get deploy
: 0000000000:0;kubectl get nodes
: 0000000000:0;kubectl get pods -n kube-system
: 0000000000:0;kubectl get pods -n NAMESPACE -w
: 0000000000:0;kubectl get pods -n NAMESPACE
: 0000000000:0;kubectl get pods --output=wide
: 0000000000:0;kubectl get pods -o wide
: 0000000000:0;kubectl get pods -n NAMESPACE
: 0000000000:0;kubectl get pods -w
: 0000000000:0;kubectl get pods
: 0000000000:0;kubectl get pvc
: 0000000000:0;kubectl get pv
: 0000000000:0;kubectl get all -n NAMESPACE
: 0000000000:0;kubectl get all -A
: 0000000000:0;kubectl get all

: 0000000000:0;kubectl get -n NAMESPACE ingress
: 0000000000:0;kubectl get -n NAMESPACE service
: 0000000000:0;kubectl get -n NAMESPACE deploy
: 0000000000:0;kubectl get -n NAMESPACE pods
: 0000000000:0;kubectl get -n NAMESPACE pvc
: 0000000000:0;kubectl get -n NAMESPACE po
: 0000000000:0;kubectl get -n NAMESPACE pv
: 0000000000:0;kubectl get -n NAMESPACE

: 0000000000:0;kubectl describe ingress INGRESS-NAME
: 0000000000:0;kubectl describe service SERVICE-NAME
: 0000000000:0;kubectl describe pods POD-NAME
: 0000000000:0;kubectl describe pvc PVC-NAME
: 0000000000:0;kubectl describe nodes

: 0000000000:0;docker compose start CONTAINER-NAME
: 0000000000:0;docker compose stop CONTAINER-NAME
: 0000000000:0;docker compose start
: 0000000000:0;docker compose stop

: 0000000000:0;docker compose up --force-recreate -d SERVICE-NAME
: 0000000000:0;docker compose up --build -d SERVICE-NAME
: 0000000000:0;docker compose down

: 0000000000:0;docker exec -it CONTAINER-NAME bash
: 0000000000:0;docker exec -it CONTAINER-NAME sh
: 0000000000:0;docker logs -f CONTAINER-NAME
: 0000000000:0;docker rm -f CONTAINER-NAME
: 0000000000:0;docker ps -a
: 0000000000:0;docker ps

: 0000000000:0;docker images -a |  grep "CONTAINER-NAME"
: 0000000000:0;docker image rm CONTAINER-NAME
: 0000000000:0;docker image prune -a --force
: 0000000000:0;docker image ls
: 0000000000:0;docker ps
: 0000000000:0;docker ps

: 0000000000:0;docker volume rm $(docker volume ls -q)
: 0000000000:0;docker volume rm CONTAINER-NAME
: 0000000000:0;docker volume rm -f
: 0000000000:0;docker volume prune
: 0000000000:0;docker volume ls

: 0000000000:0;docker container run --name container-name --rm -it -v ${PWD}:/usr/src/app -p 3003:3003 ubuntu:22.04 sh
: 0000000000:0;docker container rm -f CONTAINER-NAME
: 0000000000:0;docker container start CONTAINER-NAME
: 0000000000:0;docker container stop CONTAINER-NAME

: 0000000000:0;while true; do ssh 100.10.10.10; sleep 30; done

: 0000000000:0;echo "c29yaWFubw==" | base64 --decode
: 0000000000:0;echo -n 'soriano' | base64

: 0000000000:0;sudo nano ~/.ssh/authorized_keys
: 0000000000:0;sudo nano ~/.ssh/known_hosts
: 0000000000:0;sudo nano /etc/samba/smb.conf
: 0000000000:0;sudo nano /etc/fstab
: 0000000000:0;sudo nano /etc/hosts

: 0000000000:0;sudo systemctl is-enabled SERVICE-NAME
: 0000000000:0;sudo systemctl disable SERVICE-NAME
: 0000000000:0;sudo systemctl restart SERVICE-NAME
: 0000000000:0;sudo systemctl enable SERVICE-NAME
: 0000000000:0;sudo systemctl start SERVICE-NAME

: 0000000000:0;asdf uninstall NAME VERSION
: 0000000000:0;asdf install NAME VERSION
: 0000000000:0;asdf global NAME VERSION
: 0000000000:0;asdf plugin-add NAME
: 0000000000:0;asdf list-all NAME
: 0000000000:0;asdf list NAME

: 0000000000:0;sudo kill $(sudo lsof -t -i:3008)
: 0000000000:0;du -sh * | sort -h

: 0000000000:0;watch -n 2 sensors
: 0000000000:0;watch -n 2 uptime
: 0000000000:0;watch -n 2 mpstat -P ALL
: 0000000000:0;watch -n 2 "grep 'cpu MHz' /proc/cpuinfo"
: 0000000000:0;watch -n 1 "grep 'cpu MHz' /proc/cpuinfo"
: 0000000000:0;watch -n 1 free -h
: 0000000000:0;watch -n 1 vmstat -s
: 0000000000:0;watch -n 1 nvidia-smi

: 0000000000:0;git clone https://github.com/user/repo.git
: 0000000000:0;git push --set-upstream origin branch-name
: 0000000000:0;git reset --hard commit-hash
: 0000000000:0;git cherry-pick commit-hash
: 0000000000:0;git reset --soft HEAD~1
: 0000000000:0;git revert commit-hash
: 0000000000:0;git mrg branch-name
: 0000000000:0;git ckt branch-name
